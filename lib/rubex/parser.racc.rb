#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer.rex.rb'
require_relative 'ast.rb'

include Rubex::AST

module Rubex
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 204)

def parse file_name
  @lexer = Rubex::Lexer.new
  @lexer.parse_file file_name
  @yydebug = true
end

def next_token
  @lexer.next_token
end

def binary_op val
  Expression::Binary.new val[0], val[1], val[2]
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    90,    94,    56,    94,    66,    48,    58,    48,    49,    67,
    49,    48,     3,   133,    49,    65,   134,   123,   121,   122,
    90,    76,    77,    78,    79,     5,    92,    52,    53,    54,
     6,    74,    75,    76,    77,    78,    79,     8,    80,    81,
    82,    83,    84,    85,    86,    87,    92,    76,    77,    78,
    79,    74,    75,    76,    77,    78,    79,    11,    80,    81,
    82,    83,    84,    85,    86,    87,    16,    17,    19,   121,
   122,    44,    50,    22,    23,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
    39,    40,    64,    65,    68,    93,    21,    48,    92,    50,
    49,    16,    17,    19,   116,   118,    78,    78,    22,    23,
    24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
    34,    35,    36,    37,    38,    39,    40,    16,    17,    19,
    78,    21,    78,   124,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    38,    39,    40,    16,    17,    19,   125,    21,   nil,   nil,
    22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    35,    36,    37,    38,    39,    40,    16,
    17,    19,   nil,    21,   nil,   nil,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,   nil,    56,   nil,   nil,    21,
    58,    56,   nil,   nil,    56,    58,   nil,    56,    58,   nil,
    56,    58,   nil,    56,    58,   nil,    56,    58,   nil,   nil,
    58,    52,    53,    54,   nil,   nil,    52,    53,    54,    52,
    53,    54,    52,    53,    54,    52,    53,    54,    52,    53,
    54,    52,    53,    54,    56,   nil,   nil,    56,    58,   nil,
    56,    58,   nil,    56,    58,   nil,    56,    58,   nil,    56,
    58,   nil,    56,    58,   nil,   nil,    58,   nil,   nil,    52,
    53,    54,    52,    53,    54,    52,    53,    54,    52,    53,
    54,    52,    53,    54,    52,    53,    54,    52,    53,    54,
    56,   nil,   nil,    56,    58,   nil,    56,    58,   nil,    56,
    58,   nil,    56,    58,   nil,    56,    58,   nil,    56,    58,
   128,   nil,    58,   nil,   nil,    52,    53,    54,    52,    53,
    54,    52,    53,    54,    52,    53,    54,    52,    53,    54,
    52,    53,    54,    52,    53,    54,    56,   112,   nil,    56,
    58,   nil,   nil,    58,   nil,   nil,    74,    75,    76,    77,
    78,    79,   nil,    80,    81,    82,    83,    84,    85,    86,
    87,    52,    53,    54,    52,    53,    54,    22,    23,    24,
    25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    40,    22,    23,    24,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    36,    37,    38,    39,    40,    74,    75,    76,    77,    78,
    79,   nil,    80,    81,    82,    83,    84,    85,    86,    87,
    74,    75,    76,    77,    78,    79,   nil,    80,    81,    82,
    83,    84,    85,    86,    87,    74,    75,    76,    77,    78,
    79,   nil,    80,    81,    82,    83,    84,    85,    86,    87,
    74,    75,    76,    77,    78,    79,   nil,    80,    81,    82,
    83,    84,    85,    86,    87,    74,    75,    76,    77,    78,
    79,   nil,    80,    81,    82,    83,    84,    85,    86,    87,
    74,    75,    76,    77,    78,    79,   nil,    80,    81,    82,
    83,    84,    85,    86,    87,    74,    75,    76,    77,    78,
    79,   nil,    80,    81,    82,    83,    84,    85,    86,    74,
    75,    76,    77,    78,    79,   nil,   -88,    81,    82,    83,
    84,   -88,    74,    75,    76,    77,    78,    79,   nil,   -88,
    81,    82,    83,    84,   -88,    74,    75,    76,    77,    78,
    79,   nil,    80,    81,    82,    83,    84,    85,    74,    75,
    76,    77,    78,    79,    74,    75,    76,    77,    78,    79,
    74,    75,    76,    77,    78,    79,    74,    75,    76,    77,
    78,    79 ]

racc_action_check = [
    60,    64,    16,   116,    41,    13,    16,    44,    13,    41,
    44,    70,     1,   130,    70,    64,   130,   116,   113,   113,
   126,    98,    98,    98,    98,     2,    60,    16,    16,    16,
     3,    60,    60,    60,    60,    60,    60,     5,    60,    60,
    60,    60,    60,    60,    60,    60,   126,    99,    99,    99,
    99,   126,   126,   126,   126,   126,   126,     7,   126,   126,
   126,   126,   126,   126,   126,   126,    46,    46,    46,   132,
   132,    12,    14,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    46,    46,    46,    46,    46,    46,
    46,    46,    20,    21,    43,    61,    46,    46,    66,    71,
    46,     9,     9,     9,    93,    94,   100,   101,     9,     9,
     9,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,     9,     9,     9,     9,     9,     9,    89,    89,    89,
   102,     9,   103,   118,    89,    89,    89,    89,    89,    89,
    89,    89,    89,    89,    89,    89,    89,    89,    89,    89,
    89,    89,    89,   122,   122,   122,   119,    89,   nil,   nil,
   122,   122,   122,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,   122,   122,   122,   122,   122,   129,
   129,   129,   nil,   122,   nil,   nil,   129,   129,   129,   129,
   129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
   129,   129,   129,   129,   129,   nil,    17,   nil,   nil,   129,
    17,    19,   nil,   nil,    50,    19,   nil,    56,    50,   nil,
    65,    56,   nil,    74,    65,   nil,    75,    74,   nil,   nil,
    75,    17,    17,    17,   nil,   nil,    19,    19,    19,    50,
    50,    50,    56,    56,    56,    65,    65,    65,    74,    74,
    74,    75,    75,    75,    76,   nil,   nil,    77,    76,   nil,
    78,    77,   nil,    79,    78,   nil,    80,    79,   nil,    81,
    80,   nil,    82,    81,   nil,   nil,    82,   nil,   nil,    76,
    76,    76,    77,    77,    77,    78,    78,    78,    79,    79,
    79,    80,    80,    80,    81,    81,    81,    82,    82,    82,
    83,   nil,   nil,    84,    83,   nil,    85,    84,   nil,    86,
    85,   nil,    87,    86,   nil,   121,    87,   nil,   123,   121,
   123,   nil,   123,   nil,   nil,    83,    83,    83,    84,    84,
    84,    85,    85,    85,    86,    86,    86,    87,    87,    87,
   121,   121,   121,   123,   123,   123,   128,    88,   nil,   134,
   128,   nil,   nil,   134,   nil,   nil,    88,    88,    88,    88,
    88,    88,   nil,    88,    88,    88,    88,    88,    88,    88,
    88,   128,   128,   128,   134,   134,   134,    11,    11,    11,
    11,    11,    11,    11,    11,    11,    11,    11,    11,    11,
    11,    11,    11,    11,    11,    11,    67,    67,    67,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
    67,    67,    67,    67,    67,    51,    51,    51,    51,    51,
    51,   nil,    51,    51,    51,    51,    51,    51,    51,    51,
    59,    59,    59,    59,    59,    59,   nil,    59,    59,    59,
    59,    59,    59,    59,    59,    73,    73,    73,    73,    73,
    73,   nil,    73,    73,    73,    73,    73,    73,    73,    73,
    95,    95,    95,    95,    95,    95,   nil,    95,    95,    95,
    95,    95,    95,    95,    95,   131,   131,   131,   131,   131,
   131,   nil,   131,   131,   131,   131,   131,   131,   131,   131,
   136,   136,   136,   136,   136,   136,   nil,   136,   136,   136,
   136,   136,   136,   136,   136,   111,   111,   111,   111,   111,
   111,   nil,   111,   111,   111,   111,   111,   111,   111,   104,
   104,   104,   104,   104,   104,   nil,   104,   104,   104,   104,
   104,   104,   109,   109,   109,   109,   109,   109,   nil,   109,
   109,   109,   109,   109,   109,   110,   110,   110,   110,   110,
   110,   nil,   110,   110,   110,   110,   110,   110,   105,   105,
   105,   105,   105,   105,   106,   106,   106,   106,   106,   106,
   107,   107,   107,   107,   107,   107,   108,   108,   108,   108,
   108,   108 ]

racc_action_pointer = [
   nil,    12,    23,    30,   nil,     3,   nil,    27,   nil,    97,
   nil,   366,    68,   -30,    66,   nil,   -28,   176,   nil,   181,
    58,    47,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   -27,   nil,    60,   -28,   nil,    62,   nil,   nil,   nil,
   184,   375,   nil,   nil,   nil,   nil,   187,   nil,   nil,   390,
    -9,    59,   nil,   nil,   -31,   190,    63,   385,   nil,   nil,
   -24,    93,   nil,   405,   193,   196,   224,   227,   230,   233,
   236,   239,   242,   270,   273,   276,   279,   282,   316,   123,
   nil,   nil,   nil,    70,    50,   420,   nil,   nil,   -21,     5,
    62,    63,    86,    88,   479,   518,   524,   530,   536,   492,
   505,   465,   nil,    11,   nil,   nil,   -29,   nil,   100,   153,
   nil,   285,   149,   288,   nil,   nil,    11,   nil,   316,   175,
   -20,   435,    62,   nil,   319,   nil,   450 ]

racc_action_default = [
    -3,   -88,    -1,   -88,    -2,   -88,   137,   -38,   -37,    -6,
   -39,   -88,   -88,   -81,    -7,    -9,   -88,   -88,   -12,   -88,
   -88,   -88,   -48,   -49,   -50,   -51,   -52,   -53,   -54,   -55,
   -56,   -57,   -58,   -59,   -60,   -61,   -62,   -63,   -64,   -65,
   -66,   -88,   -42,   -88,   -81,    -5,   -82,   -83,   -85,   -86,
   -88,   -10,   -34,   -35,   -36,   -44,   -88,   -46,   -47,   -11,
   -88,   -21,   -24,   -25,   -26,   -88,   -88,   -88,   -43,    -4,
   -82,    -8,   -84,   -14,   -88,   -88,   -88,   -88,   -88,   -88,
   -88,   -88,   -88,   -88,   -88,   -88,   -88,   -88,   -88,    -6,
   -15,   -16,   -87,   -88,   -88,   -33,   -40,   -41,   -67,   -68,
   -69,   -70,   -71,   -72,   -73,   -74,   -75,   -76,   -77,   -78,
   -79,   -80,   -45,   -17,   -22,   -23,   -26,   -28,   -88,   -88,
   -18,   -88,    -6,   -88,   -27,   -13,   -88,   -20,   -30,    -6,
   -88,   -31,   -17,   -29,   -88,   -19,   -32 ]

racc_goto_table = [
    12,    43,    63,    51,    59,    62,    60,    45,    46,    72,
    89,   119,     1,     2,     4,     7,     9,    71,    96,    61,
   114,    42,   130,    10,    41,   nil,   nil,   nil,   nil,   nil,
   135,   nil,   nil,    72,   nil,   nil,   nil,    73,    69,    70,
   nil,   nil,   nil,    88,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    43,   nil,   nil,
   nil,    98,    99,   100,   101,   102,   103,   104,   105,   106,
   107,   108,   109,   110,   111,   117,   129,    97,   115,   nil,
   113,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   126,   nil,
   nil,   nil,   nil,   127,   nil,   131,   nil,   nil,   nil,   nil,
   132,   136 ]

racc_goto_check = [
     6,    18,    13,    12,    12,    21,    12,     7,    10,    28,
    14,    15,     1,     2,     3,     4,     5,     9,    16,    19,
    20,    26,    22,    24,    25,   nil,   nil,   nil,   nil,   nil,
    15,   nil,   nil,    28,   nil,   nil,   nil,    12,     7,    10,
   nil,   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,   nil,
   nil,    12,    12,    12,    12,    12,    12,    12,    12,    12,
    12,    12,    12,    12,    12,    13,    14,    26,    21,   nil,
     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,   nil,
   nil,   nil,   nil,     6,   nil,    12,   nil,   nil,   nil,   nil,
     6,    12 ]

racc_goto_pointer = [
   nil,    12,    13,    12,    10,     9,    -9,    -6,   nil,   -29,
    -5,   nil,   -13,   -18,   -50,  -102,   -48,   nil,   -10,    -1,
   -73,   -15,  -106,   nil,    16,    13,    10,   nil,   -37 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,    14,
   nil,    15,    95,    18,   nil,   nil,    91,   120,    20,   nil,
   nil,   nil,   nil,    57,   nil,   nil,   nil,    55,    47 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 60, :_reduce_1,
  2, 61, :_reduce_2,
  0, 61, :_reduce_3,
  6, 62, :_reduce_4,
  2, 65, :_reduce_5,
  0, 67, :_reduce_6,
  1, 67, :_reduce_7,
  3, 67, :_reduce_8,
  1, 68, :_reduce_9,
  2, 68, :_reduce_10,
  2, 68, :_reduce_11,
  1, 68, :_reduce_12,
  6, 68, :_reduce_13,
  3, 68, :_reduce_14,
  1, 73, :_reduce_15,
  1, 73, :_reduce_16,
  0, 74, :_reduce_17,
  1, 74, :_reduce_18,
  5, 74, :_reduce_19,
  2, 76, :_reduce_20,
  2, 70, :_reduce_21,
  3, 78, :_reduce_22,
  3, 78, :_reduce_23,
  1, 78, :_reduce_24,
  1, 78, :_reduce_25,
  1, 80, :_reduce_26,
  4, 80, :_reduce_27,
  1, 79, :_reduce_none,
  5, 79, :_reduce_29,
  0, 81, :_reduce_30,
  1, 81, :_reduce_31,
  3, 81, :_reduce_32,
  3, 72, :_reduce_33,
  1, 82, :_reduce_34,
  1, 82, :_reduce_35,
  1, 82, :_reduce_36,
  1, 63, :_reduce_37,
  0, 64, :_reduce_38,
  1, 64, :_reduce_none,
  4, 83, :_reduce_40,
  3, 84, :_reduce_41,
  1, 84, :_reduce_42,
  2, 85, :_reduce_43,
  1, 71, :_reduce_44,
  3, 71, :_reduce_45,
  1, 71, :_reduce_46,
  1, 71, :_reduce_47,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_66,
  3, 86, :_reduce_67,
  3, 86, :_reduce_68,
  3, 86, :_reduce_69,
  3, 86, :_reduce_70,
  3, 86, :_reduce_71,
  3, 86, :_reduce_72,
  3, 86, :_reduce_73,
  3, 86, :_reduce_74,
  3, 86, :_reduce_75,
  3, 86, :_reduce_76,
  3, 86, :_reduce_77,
  3, 86, :_reduce_78,
  3, 86, :_reduce_79,
  3, 86, :_reduce_80,
  0, 66, :_reduce_81,
  1, 66, :_reduce_82,
  1, 69, :_reduce_83,
  2, 69, :_reduce_84,
  1, 87, :_reduce_85,
  1, 87, :_reduce_none,
  1, 75, :_reduce_87 ]

racc_reduce_n = 88

racc_shift_n = 137

racc_token_table = {
  false => 0,
  :error => 1,
  :kDEF => 2,
  :kEND => 3,
  :kRETURN => 4,
  :kPRINT => 5,
  :kIF => 6,
  :kELSIF => 7,
  :kELSE => 8,
  :kTHEN => 9,
  :kSTATIC_ARRAY => 10,
  :kDTYPE_UINT => 11,
  :kDTYPE_LINT => 12,
  :kDTYPE_LLINT => 13,
  :kDTYPE_CHAR => 14,
  :kDTYPE_I8 => 15,
  :kDTYPE_I16 => 16,
  :kDTYPE_I32 => 17,
  :kDTYPE_I64 => 18,
  :kDTYPE_UI8 => 19,
  :kDTYPE_UI16 => 20,
  :kDTYPE_UI32 => 21,
  :kDTYPE_UI64 => 22,
  :kDTYPE_INT => 23,
  :kDTYPE_F32 => 24,
  :kDTYPE_F64 => 25,
  :kDTYPE_LF64 => 26,
  :kDTYPE_ROBJ => 27,
  :kDTYPE_ULINT => 28,
  :kDTYPE_ULLINT => 29,
  :tLPAREN => 30,
  :tRPAREN => 31,
  :tLSQUARE => 32,
  :tRSQUARE => 33,
  :tIDENTIFIER => 34,
  :tNL => 35,
  :tCOMMA => 36,
  :tSQUOTE => 37,
  :tSCOLON => 38,
  :EOF => 39,
  :tPLUS => 40,
  :tMINUS => 41,
  :tMULTIPLY => 42,
  :tDIVIDE => 43,
  :tEXPO => 44,
  :tMODULUS => 45,
  :tASSIGN => 46,
  :tEQ => 47,
  :tLT => 48,
  :tLTEQ => 49,
  :tGT => 50,
  :tGTEQ => 51,
  :tCMP => 52,
  :tANDOP => 53,
  :tOROP => 54,
  :tINTEGER => 55,
  :tFLOAT => 56,
  :tSINGLE_CHAR => 57,
  :tNEQ => 58 }

racc_nt_base = 59

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kDEF",
  "kEND",
  "kRETURN",
  "kPRINT",
  "kIF",
  "kELSIF",
  "kELSE",
  "kTHEN",
  "kSTATIC_ARRAY",
  "kDTYPE_UINT",
  "kDTYPE_LINT",
  "kDTYPE_LLINT",
  "kDTYPE_CHAR",
  "kDTYPE_I8",
  "kDTYPE_I16",
  "kDTYPE_I32",
  "kDTYPE_I64",
  "kDTYPE_UI8",
  "kDTYPE_UI16",
  "kDTYPE_UI32",
  "kDTYPE_UI64",
  "kDTYPE_INT",
  "kDTYPE_F32",
  "kDTYPE_F64",
  "kDTYPE_LF64",
  "kDTYPE_ROBJ",
  "kDTYPE_ULINT",
  "kDTYPE_ULLINT",
  "tLPAREN",
  "tRPAREN",
  "tLSQUARE",
  "tRSQUARE",
  "tIDENTIFIER",
  "tNL",
  "tCOMMA",
  "tSQUOTE",
  "tSCOLON",
  "EOF",
  "tPLUS",
  "tMINUS",
  "tMULTIPLY",
  "tDIVIDE",
  "tEXPO",
  "tMODULUS",
  "tASSIGN",
  "tEQ",
  "tLT",
  "tLTEQ",
  "tGT",
  "tGTEQ",
  "tCMP",
  "tANDOP",
  "tOROP",
  "tINTEGER",
  "tFLOAT",
  "tSINGLE_CHAR",
  "tNEQ",
  "$start",
  "program",
  "methods",
  "ruby_method",
  "f_name",
  "f_opt_arglist",
  "compstmt",
  "opt_terms",
  "stmts",
  "stmt",
  "terms",
  "var_decl_or_init",
  "expr",
  "normal_init",
  "then",
  "if_tail",
  "eol",
  "opt_else",
  "dtype",
  "decl_or_init",
  "var_init",
  "normal_decl",
  "array_list",
  "literal",
  "f_arglist",
  "f_args",
  "f_normal_arg",
  "binary_op",
  "term" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_1(val, _values, result)
     result = Node.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_4(val, _values, result)
            result = RubyMethodDef.new(val[1], val[2], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_6(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_7(val, _values, result)
     result = [*val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_8(val, _values, result)
     result = [*val[0], *val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_9(val, _values, result)
            variables = []
        dtype = val[0][:dtype]
        val[0][:decl_or_init].each do |di|
          var = Statement::VariableDeclaration.new(dtype, di[:name], di[:value])
          variables << var
        end

        result = variables
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_10(val, _values, result)
     result = Statement::Return.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_11(val, _values, result)
     result = Statement::Print.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_12(val, _values, result)
          match = val[0]
      result = Statement::Assign.new match[:name], match[:value]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_13(val, _values, result)
          result = Statement::IfBlock.new val[1], [*val[3]], [*val[4]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_14(val, _values, result)
     result = Statement::IfBlock.new val[2], [*val[0]], [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_15(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_16(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_17(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_18(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_19(val, _values, result)
          result = Statement::IfBlock::Elsif.new val[1], [*val[3]], [*val[4]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_20(val, _values, result)
     result = Statement::IfBlock::Else.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_21(val, _values, result)
            result = {
          dtype: val[0],
          decl_or_init: val[1]
        }
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_22(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_23(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_24(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_26(val, _values, result)
     result = { name: val[0] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_27(val, _values, result)
    
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_29(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_30(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_31(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_32(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_33(val, _values, result)
     result = { name: val[0], value: val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_34(val, _values, result)
     result = Literal::Int.new val[0]    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_35(val, _values, result)
     result = Literal::Double.new val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 127)
  def _reduce_36(val, _values, result)
     result = Literal::Char.new val[0]   
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_37(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_38(val, _values, result)
    
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_40(val, _values, result)
     result = ArgumentList.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_41(val, _values, result)
            result = [*val[0], val[2]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_42(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_43(val, _values, result)
     result = CBaseType.new val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_44(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_45(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_46(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_47(val, _values, result)
    
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_66(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_67(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_68(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_69(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_70(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 169)
  def _reduce_71(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_72(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_73(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_74(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_75(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_76(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_77(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_78(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_79(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_80(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_81(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_82(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_83(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_84(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 189)
  def _reduce_85(val, _values, result)
    
    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 193)
  def _reduce_87(val, _values, result)
    result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rubex
