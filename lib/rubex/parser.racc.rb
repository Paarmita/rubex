#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer.rex.rb'
require_relative 'ast.rb'

include Rubex::AST

module Rubex
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 190)

def parse file_name
  @lexer = Rubex::Lexer.new
  @lexer.parse_file file_name
  @yydebug = true
end

def next_token
  @lexer.next_token
end

def binary_op val
  Expression::Binary.new val[0], val[1], val[2]
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    89,    47,    55,     3,    48,     5,    57,    73,    74,    75,
    76,    77,    78,     6,   -80,    80,    81,    82,    83,   -80,
    89,    47,   116,   117,    48,    65,    91,    51,    52,    53,
    66,    73,    74,    75,    76,    77,    78,     8,    79,    80,
    81,    82,    83,    84,    85,    86,    91,    47,   116,   117,
    48,    73,    74,    75,    76,    77,    78,    10,    79,    80,
    81,    82,    83,    84,    85,    86,    15,    16,    18,    75,
    76,    77,    78,    21,    22,    23,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    38,    39,    75,    76,    77,    78,    20,    47,    43,    49,
    48,    15,    16,    18,    63,    64,    67,    92,    21,    22,
    23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    15,    16,    18,
    64,    20,    91,    49,    21,    22,    23,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    15,    16,    18,    63,    20,    77,    77,
    21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    38,    39,    15,
    16,    18,    77,    20,    77,   118,    21,    22,    23,    24,
    25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,   nil,    55,   nil,   nil,    20,
    57,    55,   nil,   nil,    55,    57,   nil,    55,    57,   nil,
    55,    57,   nil,    55,    57,   nil,    55,    57,   nil,   nil,
    57,    51,    52,    53,   nil,   nil,    51,    52,    53,    51,
    52,    53,    51,    52,    53,    51,    52,    53,    51,    52,
    53,    51,    52,    53,    55,   nil,   nil,    55,    57,   nil,
    55,    57,   nil,    55,    57,   nil,    55,    57,   nil,    55,
    57,   nil,    55,    57,   nil,   nil,    57,   nil,   nil,    51,
    52,    53,    51,    52,    53,    51,    52,    53,    51,    52,
    53,    51,    52,    53,    51,    52,    53,    51,    52,    53,
    55,   nil,   nil,    55,    57,   nil,    55,    57,   nil,    55,
    57,   nil,    55,    57,   nil,    55,    57,   nil,   nil,    57,
   nil,   nil,   nil,   nil,   nil,    51,    52,    53,    51,    52,
    53,    51,    52,    53,    51,    52,    53,    51,    52,    53,
    51,    52,    53,   110,    73,    74,    75,    76,    77,    78,
   nil,   nil,    73,    74,    75,    76,    77,    78,   nil,    79,
    80,    81,    82,    83,    84,    85,    86,    21,    22,    23,
    24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
    34,    35,    36,    37,    38,    39,    21,    22,    23,    24,
    25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
    35,    36,    37,    38,    39,    73,    74,    75,    76,    77,
    78,   nil,    79,    80,    81,    82,    83,    84,    85,    86,
    73,    74,    75,    76,    77,    78,   nil,    79,    80,    81,
    82,    83,    84,    85,    86,    73,    74,    75,    76,    77,
    78,   nil,    79,    80,    81,    82,    83,    84,    85,    86,
    73,    74,    75,    76,    77,    78,   nil,    79,    80,    81,
    82,    83,    84,    85,    86,    73,    74,    75,    76,    77,
    78,   nil,    79,    80,    81,    82,    83,    84,    85,    73,
    74,    75,    76,    77,    78,   nil,   -80,    80,    81,    82,
    83,   -80,    73,    74,    75,    76,    77,    78,   nil,    79,
    80,    81,    82,    83,    84,    73,    74,    75,    76,    77,
    78,    73,    74,    75,    76,    77,    78,    73,    74,    75,
    76,    77,    78 ]

racc_action_check = [
    59,    12,    15,     1,    12,     2,    15,   102,   102,   102,
   102,   102,   102,     3,   102,   102,   102,   102,   102,   102,
   119,    43,   111,   111,    43,    40,    59,    15,    15,    15,
    40,    59,    59,    59,    59,    59,    59,     5,    59,    59,
    59,    59,    59,    59,    59,    59,   119,    69,   122,   122,
    69,   119,   119,   119,   119,   119,   119,     7,   119,   119,
   119,   119,   119,   119,   119,   119,    45,    45,    45,    96,
    96,    96,    96,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    97,    97,    97,    97,    45,    45,    11,    13,
    45,     9,     9,     9,    19,    20,    42,    60,     9,     9,
     9,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,     9,     9,     9,     9,     9,     9,    88,    88,    88,
    63,     9,    65,    70,    88,    88,    88,    88,    88,    88,
    88,    88,    88,    88,    88,    88,    88,    88,    88,    88,
    88,    88,    88,   117,   117,   117,    92,    88,    98,    99,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   121,
   121,   121,   100,   117,   101,   114,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   nil,    16,   nil,   nil,   121,
    16,    18,   nil,   nil,    49,    18,   nil,    55,    49,   nil,
    64,    55,   nil,    73,    64,   nil,    74,    73,   nil,   nil,
    74,    16,    16,    16,   nil,   nil,    18,    18,    18,    49,
    49,    49,    55,    55,    55,    64,    64,    64,    73,    73,
    73,    74,    74,    74,    75,   nil,   nil,    76,    75,   nil,
    77,    76,   nil,    78,    77,   nil,    79,    78,   nil,    80,
    79,   nil,    81,    80,   nil,   nil,    81,   nil,   nil,    75,
    75,    75,    76,    76,    76,    77,    77,    77,    78,    78,
    78,    79,    79,    79,    80,    80,    80,    81,    81,    81,
    82,   nil,   nil,    83,    82,   nil,    84,    83,   nil,    85,
    84,   nil,    86,    85,   nil,   116,    86,   nil,   nil,   116,
   nil,   nil,   nil,   nil,   nil,    82,    82,    82,    83,    83,
    83,    84,    84,    84,    85,    85,    85,    86,    86,    86,
   116,   116,   116,    87,   103,   103,   103,   103,   103,   103,
   nil,   nil,    87,    87,    87,    87,    87,    87,   nil,    87,
    87,    87,    87,    87,    87,    87,    87,    10,    10,    10,
    10,    10,    10,    10,    10,    10,    10,    10,    10,    10,
    10,    10,    10,    10,    10,    10,    66,    66,    66,    66,
    66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
    66,    66,    66,    66,    66,    50,    50,    50,    50,    50,
    50,   nil,    50,    50,    50,    50,    50,    50,    50,    50,
    58,    58,    58,    58,    58,    58,   nil,    58,    58,    58,
    58,    58,    58,    58,    58,    72,    72,    72,    72,    72,
    72,   nil,    72,    72,    72,    72,    72,    72,    72,    72,
    93,    93,    93,    93,    93,    93,   nil,    93,    93,    93,
    93,    93,    93,    93,    93,   109,   109,   109,   109,   109,
   109,   nil,   109,   109,   109,   109,   109,   109,   109,   107,
   107,   107,   107,   107,   107,   nil,   107,   107,   107,   107,
   107,   107,   108,   108,   108,   108,   108,   108,   nil,   108,
   108,   108,   108,   108,   108,   104,   104,   104,   104,   104,
   104,   105,   105,   105,   105,   105,   105,   106,   106,   106,
   106,   106,   106 ]

racc_action_pointer = [
   nil,     3,     3,    13,   nil,     3,   nil,    27,   nil,    97,
   356,    95,   -34,    93,   nil,   -28,   176,   nil,   181,    70,
    59,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    -6,   nil,    72,   -14,   nil,    62,   nil,   nil,   nil,   184,
   365,   nil,   nil,   nil,   nil,   187,   nil,   nil,   380,    -9,
    71,   nil,   nil,    84,   190,    97,   375,   nil,   nil,    12,
   127,   nil,   395,   193,   196,   224,   227,   230,   233,   236,
   239,   242,   270,   273,   276,   279,   282,   312,   123,   nil,
   nil,   nil,   122,   410,   nil,   nil,    27,    50,   114,   115,
   138,   140,   -33,   304,   465,   471,   477,   439,   452,   425,
   nil,    15,   nil,   nil,   182,   nil,   285,   149,   nil,    11,
   nil,   175,    41,   nil ]

racc_action_default = [
    -3,   -80,    -1,   -80,    -2,   -80,   124,   -80,   -31,    -6,
   -80,   -80,   -73,    -7,    -9,   -80,   -80,   -12,   -80,   -80,
   -80,   -40,   -41,   -42,   -43,   -44,   -45,   -46,   -47,   -48,
   -49,   -50,   -51,   -52,   -53,   -54,   -55,   -56,   -57,   -58,
   -80,   -34,   -80,   -73,    -5,   -74,   -75,   -77,   -78,   -80,
   -10,   -28,   -29,   -30,   -36,   -80,   -38,   -39,   -11,   -80,
   -21,   -24,   -25,   -26,   -80,   -80,   -80,   -35,    -4,   -74,
    -8,   -76,   -14,   -80,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,    -6,   -15,
   -16,   -79,   -80,   -27,   -32,   -33,   -59,   -60,   -61,   -62,
   -63,   -64,   -65,   -66,   -67,   -68,   -69,   -70,   -71,   -72,
   -37,   -17,   -22,   -23,   -80,   -18,   -80,    -6,   -13,   -80,
   -20,    -6,   -17,   -19 ]

racc_goto_table = [
    11,    50,    58,    62,    59,    61,    44,    45,    71,   114,
     1,     2,     4,    88,     7,     9,    70,    94,    42,    41,
   123,    60,    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    71,   nil,   nil,    72,   nil,    68,    69,   nil,
   nil,    87,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    93,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    96,
    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
   107,   108,   109,   121,    42,    95,   112,   nil,   113,   111,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   119,   nil,   nil,   nil,   nil,   nil,   120,   nil,
   nil,   nil,   122 ]

racc_goto_check = [
     6,    12,    12,    13,    12,    20,     7,    10,    25,    15,
     1,     2,     3,    14,     4,     5,     9,    16,    18,    23,
    15,    19,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    25,   nil,   nil,    12,   nil,     7,    10,   nil,
   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,
    12,    12,    12,    12,    12,    12,    12,    12,    12,    12,
    12,    12,    12,    14,    18,    23,    13,   nil,    20,     6,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,     6,   nil,
   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    10,    11,    10,     9,     8,    -9,    -6,   nil,   -29,
    -5,   nil,   -14,   -16,   -46,  -102,   -48,   nil,     8,     2,
   -14,   nil,    12,     9,   nil,   -37 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    12,    13,
   nil,    14,   nil,    17,   nil,   nil,    90,   115,    19,   nil,
   nil,    56,   nil,   nil,    54,    46 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 60, :_reduce_1,
  2, 61, :_reduce_2,
  0, 61, :_reduce_3,
  6, 62, :_reduce_4,
  2, 65, :_reduce_5,
  0, 67, :_reduce_6,
  1, 67, :_reduce_7,
  3, 67, :_reduce_8,
  1, 68, :_reduce_9,
  2, 68, :_reduce_10,
  2, 68, :_reduce_11,
  1, 68, :_reduce_12,
  6, 68, :_reduce_13,
  3, 68, :_reduce_14,
  1, 73, :_reduce_15,
  1, 73, :_reduce_16,
  0, 74, :_reduce_17,
  1, 74, :_reduce_18,
  5, 74, :_reduce_19,
  2, 76, :_reduce_20,
  2, 70, :_reduce_21,
  3, 78, :_reduce_22,
  3, 78, :_reduce_23,
  1, 78, :_reduce_24,
  1, 78, :_reduce_25,
  1, 79, :_reduce_26,
  3, 72, :_reduce_27,
  1, 80, :_reduce_28,
  1, 80, :_reduce_29,
  1, 80, :_reduce_30,
  1, 63, :_reduce_31,
  4, 64, :_reduce_32,
  3, 81, :_reduce_33,
  1, 81, :_reduce_34,
  2, 82, :_reduce_35,
  1, 71, :_reduce_36,
  3, 71, :_reduce_37,
  1, 71, :_reduce_38,
  1, 71, :_reduce_39,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_58,
  3, 83, :_reduce_59,
  3, 83, :_reduce_60,
  3, 83, :_reduce_61,
  3, 83, :_reduce_62,
  3, 83, :_reduce_63,
  3, 83, :_reduce_64,
  3, 83, :_reduce_65,
  3, 83, :_reduce_66,
  3, 83, :_reduce_67,
  3, 83, :_reduce_68,
  3, 83, :_reduce_69,
  3, 83, :_reduce_70,
  3, 83, :_reduce_71,
  3, 83, :_reduce_72,
  0, 66, :_reduce_73,
  1, 66, :_reduce_74,
  1, 69, :_reduce_75,
  2, 69, :_reduce_76,
  1, 84, :_reduce_77,
  1, 84, :_reduce_none,
  1, 75, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 124

racc_token_table = {
  false => 0,
  :error => 1,
  :kDEF => 2,
  :kEND => 3,
  :kRETURN => 4,
  :kPRINT => 5,
  :kIF => 6,
  :kELSIF => 7,
  :kELSE => 8,
  :kTHEN => 9,
  :kSTATIC_ARRAY => 10,
  :kDTYPE_UINT => 11,
  :kDTYPE_LINT => 12,
  :kDTYPE_LLINT => 13,
  :kDTYPE_CHAR => 14,
  :kDTYPE_I8 => 15,
  :kDTYPE_I16 => 16,
  :kDTYPE_I32 => 17,
  :kDTYPE_I64 => 18,
  :kDTYPE_UI8 => 19,
  :kDTYPE_UI16 => 20,
  :kDTYPE_UI32 => 21,
  :kDTYPE_UI64 => 22,
  :kDTYPE_INT => 23,
  :kDTYPE_F32 => 24,
  :kDTYPE_F64 => 25,
  :kDTYPE_LF64 => 26,
  :kDTYPE_ROBJ => 27,
  :kDTYPE_ULINT => 28,
  :kDTYPE_ULLINT => 29,
  :tLPAREN => 30,
  :tRPAREN => 31,
  :tLSQUARE => 32,
  :tRSQUARE => 33,
  :tIDENTIFIER => 34,
  :tNL => 35,
  :tCOMMA => 36,
  :tSQUOTE => 37,
  :tSCOLON => 38,
  :EOF => 39,
  :tPLUS => 40,
  :tMINUS => 41,
  :tMULTIPLY => 42,
  :tDIVIDE => 43,
  :tEXPO => 44,
  :tMODULUS => 45,
  :tASSIGN => 46,
  :tEQ => 47,
  :tLT => 48,
  :tLTEQ => 49,
  :tGT => 50,
  :tGTEQ => 51,
  :tCMP => 52,
  :tANDOP => 53,
  :tOROP => 54,
  :tINTEGER => 55,
  :tFLOAT => 56,
  :tSINGLE_CHAR => 57,
  :tNEQ => 58 }

racc_nt_base = 59

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kDEF",
  "kEND",
  "kRETURN",
  "kPRINT",
  "kIF",
  "kELSIF",
  "kELSE",
  "kTHEN",
  "kSTATIC_ARRAY",
  "kDTYPE_UINT",
  "kDTYPE_LINT",
  "kDTYPE_LLINT",
  "kDTYPE_CHAR",
  "kDTYPE_I8",
  "kDTYPE_I16",
  "kDTYPE_I32",
  "kDTYPE_I64",
  "kDTYPE_UI8",
  "kDTYPE_UI16",
  "kDTYPE_UI32",
  "kDTYPE_UI64",
  "kDTYPE_INT",
  "kDTYPE_F32",
  "kDTYPE_F64",
  "kDTYPE_LF64",
  "kDTYPE_ROBJ",
  "kDTYPE_ULINT",
  "kDTYPE_ULLINT",
  "tLPAREN",
  "tRPAREN",
  "tLSQUARE",
  "tRSQUARE",
  "tIDENTIFIER",
  "tNL",
  "tCOMMA",
  "tSQUOTE",
  "tSCOLON",
  "EOF",
  "tPLUS",
  "tMINUS",
  "tMULTIPLY",
  "tDIVIDE",
  "tEXPO",
  "tMODULUS",
  "tASSIGN",
  "tEQ",
  "tLT",
  "tLTEQ",
  "tGT",
  "tGTEQ",
  "tCMP",
  "tANDOP",
  "tOROP",
  "tINTEGER",
  "tFLOAT",
  "tSINGLE_CHAR",
  "tNEQ",
  "$start",
  "program",
  "methods",
  "ruby_method",
  "f_name",
  "f_arglist",
  "compstmt",
  "opt_terms",
  "stmts",
  "stmt",
  "terms",
  "var_decl_or_init",
  "expr",
  "normal_init",
  "then",
  "if_tail",
  "eol",
  "opt_else",
  "dtype",
  "decl_or_init",
  "normal_decl",
  "literal",
  "f_args",
  "f_normal_arg",
  "binary_op",
  "term" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_1(val, _values, result)
     result = Node.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_4(val, _values, result)
            result = RubyMethodDef.new(val[1], val[2], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_6(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_7(val, _values, result)
     result = [*val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_8(val, _values, result)
     result = [*val[0], *val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_9(val, _values, result)
            variables = []
        dtype = val[0][:dtype]
        val[0][:decl_or_init].each do |di|
          var = Statement::VariableDeclaration.new(dtype, di[:name], di[:value])
          variables << var
        end

          result = variables
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 65)
  def _reduce_10(val, _values, result)
     result = Statement::Return.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_11(val, _values, result)
     result = Statement::Print.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_12(val, _values, result)
          match = val[0]
      result = Statement::Assign.new match[:name], match[:value]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_13(val, _values, result)
          result = Statement::IfBlock.new val[1], [*val[3]], [*val[4]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_14(val, _values, result)
     result = Statement::IfBlock.new val[2], [*val[0]], [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_15(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_16(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_17(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_18(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_19(val, _values, result)
          result = Statement::IfBlock::Elsif.new val[1], [*val[3]], [*val[4]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_20(val, _values, result)
     result = Statement::IfBlock::Else.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_21(val, _values, result)
            result = {
          dtype: val[0],
          decl_or_init: val[1]
        }
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_22(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_23(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_24(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_25(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_26(val, _values, result)
     result = { name: val[0] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_27(val, _values, result)
     result = { name: val[0], value: val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_28(val, _values, result)
     result = Literal::Int.new val[0]    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_29(val, _values, result)
     result = Literal::Double.new val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_30(val, _values, result)
     result = Literal::Char.new val[0]   
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_31(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 123)
  def _reduce_32(val, _values, result)
     result = ArgumentList.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_33(val, _values, result)
            result = [*val[0], val[2]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_34(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_35(val, _values, result)
     result = CBaseType.new val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_36(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_37(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_38(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_39(val, _values, result)
    
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_58(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_59(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_60(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_61(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 154)
  def _reduce_62(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_63(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_64(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_65(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_66(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_67(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_68(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_69(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_70(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_71(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_72(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_73(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_74(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_75(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 172)
  def _reduce_76(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_77(val, _values, result)
    
    result
  end
.,.,

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_79(val, _values, result)
    result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rubex
