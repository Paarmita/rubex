#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require_relative 'lexer.rex.rb'
require_relative 'ast.rb'

include Rubex::AST

module Rubex
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 236)

def parse file_name
  @lexer = Rubex::Lexer.new
  @lexer.parse_file file_name
  @yydebug = true
end

def next_token
  @lexer.next_token
end

def binary_op val
  Expression::Binary.new val[0], val[1], val[2]
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    16,    17,    19,   101,    77,    50,   101,    20,    51,    78,
     3,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    16,    17,    19,   103,    22,    50,   103,    20,    51,   143,
   144,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    16,    17,    19,    50,    22,    50,    51,    20,    51,   107,
   108,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    16,    17,    19,   155,    22,     5,   156,    20,   109,   110,
     6,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    16,    17,    19,     8,    22,   143,   144,    20,    11,    46,
    52,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    16,    17,    19,    71,    22,    59,    76,    20,    79,    63,
    75,    24,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
    54,    55,    56,    59,    22,   104,    59,    63,   111,    59,
    63,   112,    59,    63,   103,    59,    63,    52,    59,    63,
   135,    59,    63,   136,    71,    63,   140,    89,    54,    55,
    56,    54,    55,    56,    54,    55,    56,    54,    55,    56,
    54,    55,    56,    54,    55,    56,    54,    55,    56,    59,
    89,    89,    59,    63,    89,    59,    63,   145,    59,    63,
   150,    59,    63,   nil,    59,    63,   nil,    59,    63,   nil,
   nil,    63,   nil,   nil,    54,    55,    56,    54,    55,    56,
    54,    55,    56,    54,    55,    56,    54,    55,    56,    54,
    55,    56,    54,    55,    56,    59,   nil,   nil,    59,    63,
   nil,    59,    63,   nil,    59,    63,   nil,    59,    63,   nil,
    59,    63,   nil,    59,    63,   nil,   nil,    63,   nil,   nil,
    54,    55,    56,    54,    55,    56,    54,    55,    56,    54,
    55,    56,    54,    55,    56,    54,    55,    56,    54,    55,
    56,    59,   nil,   nil,    59,    63,   139,    59,    63,   nil,
    59,    63,   nil,    59,    63,   nil,    59,    63,   nil,    59,
    63,   nil,   nil,    63,   nil,   nil,    54,    55,    56,    54,
    55,    56,    54,    55,    56,    54,    55,    56,    54,    55,
    56,    54,    55,    56,    54,    55,    56,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    38,    39,    40,    41,    42,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    38,    39,    40,    41,    42,    75,    85,    86,    87,    88,
    89,    90,   nil,    85,    86,    87,    88,    89,    90,    74,
    91,    92,    93,    94,    95,    96,    97,    98,    75,    87,
    88,    89,    90,   nil,   132,    85,    86,    87,    88,    89,
    90,   nil,    74,    85,    86,    87,    88,    89,    90,    85,
    86,    87,    88,    89,    90,   nil,   nil,   107,   108,   109,
   110,    85,    86,    87,    88,    89,    90,    85,    86,    87,
    88,    89,    90,    85,    86,    87,    88,    89,    90,    85,
    86,    87,    88,    89,    90,    85,    86,    87,    88,    89,
    90,    85,    86,    87,    88,    89,    90,    85,    86,    87,
    88,    89,    90,    85,    86,    87,    88,    89,    90,    87,
    88,    89,    90 ]

racc_action_check = [
    48,    48,    48,    65,    43,    13,   151,    48,    13,    43,
     1,    48,    48,    48,    48,    48,    48,    48,    48,    48,
    48,    48,    48,    48,    48,    48,    48,    48,    48,    48,
     9,     9,     9,    65,    48,    48,   151,     9,    48,   133,
   133,     9,     9,     9,     9,     9,     9,     9,     9,     9,
     9,     9,     9,     9,     9,     9,     9,     9,     9,     9,
   100,   100,   100,    46,     9,    81,    46,   100,    81,   135,
   135,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   100,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   104,   104,   104,   148,   100,     2,   148,   104,   136,   136,
     3,   104,   104,   104,   104,   104,   104,   104,   104,   104,
   104,   104,   104,   104,   104,   104,   104,   104,   104,   104,
   144,   144,   144,     5,   104,   159,   159,   144,     7,    12,
    14,   144,   144,   144,   144,   144,   144,   144,   144,   144,
   144,   144,   144,   144,   144,   144,   144,   144,   144,   144,
   157,   157,   157,    21,   144,    16,    23,   157,    45,    16,
    63,   157,   157,   157,   157,   157,   157,   157,   157,   157,
   157,   157,   157,   157,   157,   157,   157,   157,   157,   157,
    16,    16,    16,    17,   157,    66,    19,    17,    68,    20,
    19,    72,    52,    20,    77,    59,    52,    82,    74,    59,
   105,    75,    74,   106,   111,    75,   114,   120,    17,    17,
    17,    19,    19,    19,    20,    20,    20,    52,    52,    52,
    59,    59,    59,    74,    74,    74,    75,    75,    75,    76,
   121,   122,    85,    76,   123,    86,    85,   134,    87,    86,
   141,    88,    87,   nil,    89,    88,   nil,    90,    89,   nil,
   nil,    90,   nil,   nil,    76,    76,    76,    85,    85,    85,
    86,    86,    86,    87,    87,    87,    88,    88,    88,    89,
    89,    89,    90,    90,    90,    91,   nil,   nil,    92,    91,
   nil,    93,    92,   nil,    94,    93,   nil,    95,    94,   nil,
    96,    95,   nil,    97,    96,   nil,   nil,    97,   nil,   nil,
    91,    91,    91,    92,    92,    92,    93,    93,    93,    94,
    94,    94,    95,    95,    95,    96,    96,    96,    97,    97,
    97,    98,   nil,   nil,   112,    98,   112,   139,   112,   nil,
   143,   139,   nil,   146,   143,   nil,   147,   146,   nil,   156,
   147,   nil,   nil,   156,   nil,   nil,    98,    98,    98,   112,
   112,   112,   139,   139,   139,   143,   143,   143,   146,   146,
   146,   147,   147,   147,   156,   156,   156,    11,    11,    11,
    11,    11,    11,    11,    11,    11,    11,    11,    11,    11,
    11,    11,    11,    11,    11,    11,    78,    78,    78,    78,
    78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
    78,    78,    78,    78,    78,    22,   124,   124,   124,   124,
   124,   124,   nil,    57,    57,    57,    57,    57,    57,    22,
    57,    57,    57,    57,    57,    57,    57,    57,    71,   118,
   118,   118,   118,   nil,    99,   125,   125,   125,   125,   125,
   125,   nil,    71,    99,    99,    99,    99,    99,    99,    67,
    67,    67,    67,    67,    67,   nil,   nil,    67,    67,    67,
    67,   126,   126,   126,   126,   126,   126,   127,   127,   127,
   127,   127,   127,   128,   128,   128,   128,   128,   128,   129,
   129,   129,   129,   129,   129,   130,   130,   130,   130,   130,
   130,   131,   131,   131,   131,   131,   131,   153,   153,   153,
   153,   153,   153,   154,   154,   154,   154,   154,   154,   119,
   119,   119,   119 ]

racc_action_pointer = [
   nil,    10,    93,   100,   nil,    85,   nil,    94,   nil,    26,
   nil,   352,   126,   -34,   124,   nil,   121,   149,   nil,   152,
   155,   115,   369,   106,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -31,   nil,   120,    24,   nil,    -4,   nil,
   nil,   nil,   158,   nil,   nil,   nil,   nil,   369,   nil,   161,
   nil,   nil,   nil,   124,   nil,    -6,   171,   405,   148,   nil,
   nil,   392,   141,   nil,   164,   167,   195,   155,   371,   nil,
   nil,    26,   191,   nil,   nil,   198,   201,   204,   207,   210,
   213,   241,   244,   247,   250,   253,   256,   259,   287,   399,
    56,   nil,   nil,   nil,    86,   162,   165,   nil,   nil,   nil,
   nil,   166,   290,   nil,   169,   nil,   nil,   nil,   383,   463,
   159,   182,   183,   186,   362,   391,   417,   423,   429,   435,
   441,   447,   nil,    32,   234,    17,    44,   nil,   nil,   293,
   nil,   237,   nil,   296,   116,   nil,   299,   302,    56,   nil,
   nil,    -3,   nil,   453,   459,   nil,   305,   146,   nil,   118,
   nil ]

racc_action_default = [
    -3,  -100,    -1,  -100,    -2,  -100,   161,   -46,   -45,    -6,
   -47,  -100,  -100,   -93,    -7,    -9,  -100,  -100,   -12,  -100,
  -100,  -100,  -100,  -100,   -74,   -75,   -76,   -77,   -78,   -79,
   -80,   -81,   -82,   -83,   -84,   -85,   -86,   -87,   -88,   -89,
   -90,   -91,   -92,  -100,   -50,  -100,   -93,    -5,   -94,   -95,
   -97,   -98,  -100,   -10,   -42,   -43,   -44,   -52,   -53,  -100,
   -61,   -70,   -71,   -72,   -11,  -100,  -100,  -100,   -28,   -31,
   -32,   -33,   -34,   -35,  -100,  -100,  -100,  -100,  -100,   -51,
    -4,   -94,    -8,   -96,   -14,  -100,  -100,  -100,  -100,  -100,
  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,  -100,
    -6,   -22,   -23,   -99,    -6,  -100,  -100,   -18,   -19,   -20,
   -21,  -100,  -100,   -40,  -100,   -41,   -48,   -49,   -54,   -55,
   -56,   -57,   -58,   -59,   -62,   -63,   -64,   -65,   -66,   -67,
   -68,   -69,   -60,   -24,  -100,  -100,  -100,   -29,   -30,   -37,
   -73,  -100,   -25,  -100,    -6,   -15,  -100,  -100,  -100,   -38,
   -13,  -100,   -27,   -16,   -17,   -36,  -100,    -6,   -39,   -24,
   -26 ]

racc_goto_table = [
    12,    23,    53,    64,    67,    65,    47,    73,    70,    69,
   141,    48,    83,    72,   100,   106,    45,   105,     1,    44,
     2,     4,     7,     9,    82,    66,   116,    68,   148,    10,
    43,   nil,   nil,   nil,   nil,   nil,   160,   nil,    84,    80,
    23,   nil,   nil,    99,    81,    83,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   113,   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118,
   119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
   129,   130,   131,    45,   147,   146,   117,   nil,   nil,   nil,
   nil,   133,    23,   nil,   nil,   134,    23,    73,   137,   138,
   157,   nil,   nil,    72,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   149,   nil,   nil,   nil,   151,
   153,   154,   nil,   nil,   nil,   152,    23,   nil,   nil,   nil,
   nil,   nil,   158,   nil,   nil,   nil,   nil,   nil,   159,    23 ]

racc_goto_check = [
     6,    26,    12,    12,    17,    12,     7,    13,    24,    25,
    15,    10,    34,    26,    14,    19,    22,    18,     1,    31,
     2,     3,     4,     5,     9,    16,    20,    23,    27,    29,
    30,   nil,   nil,   nil,   nil,   nil,    15,   nil,    12,     7,
    26,   nil,   nil,    17,    10,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    12,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    17,
    17,    17,    17,    17,    17,    17,    17,    17,    17,    17,
    17,    17,    17,    22,    19,    18,    31,   nil,   nil,   nil,
   nil,     6,    26,   nil,   nil,     6,    26,    13,    24,    25,
    14,   nil,   nil,    26,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    12,   nil,   nil,   nil,    12,
    17,    17,   nil,   nil,   nil,     6,    26,   nil,   nil,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,     6,    26 ]

racc_goto_pointer = [
   nil,    18,    20,    19,    17,    16,    -9,    -7,   nil,   -24,
    -2,   nil,   -14,   -14,   -51,  -123,     5,   -16,   -50,   -52,
   -51,   nil,     5,     6,   -13,   -12,    -8,  -111,   nil,    22,
    19,     8,   nil,   nil,   -36 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,    14,
   nil,    15,   115,    18,   nil,   nil,   nil,    57,   nil,   nil,
   102,   142,    21,   nil,   nil,   nil,    61,   nil,    62,   nil,
   nil,   nil,    58,    60,    49 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 64, :_reduce_1,
  2, 65, :_reduce_2,
  0, 65, :_reduce_3,
  6, 66, :_reduce_4,
  2, 69, :_reduce_5,
  0, 71, :_reduce_6,
  1, 71, :_reduce_7,
  3, 71, :_reduce_8,
  1, 72, :_reduce_9,
  2, 72, :_reduce_10,
  2, 72, :_reduce_11,
  1, 72, :_reduce_12,
  6, 72, :_reduce_13,
  3, 72, :_reduce_14,
  5, 72, :_reduce_15,
  5, 79, :_reduce_16,
  5, 79, :_reduce_17,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  0, 78, :_reduce_24,
  1, 78, :_reduce_25,
  5, 78, :_reduce_26,
  2, 84, :_reduce_27,
  2, 74, :_reduce_28,
  3, 86, :_reduce_29,
  3, 86, :_reduce_30,
  1, 86, :_reduce_31,
  1, 86, :_reduce_32,
  1, 88, :_reduce_33,
  1, 88, :_reduce_34,
  1, 87, :_reduce_none,
  5, 87, :_reduce_36,
  0, 90, :_reduce_37,
  1, 90, :_reduce_38,
  3, 90, :_reduce_39,
  3, 76, :_reduce_40,
  3, 76, :_reduce_41,
  1, 91, :_reduce_42,
  1, 91, :_reduce_43,
  1, 91, :_reduce_44,
  1, 67, :_reduce_45,
  0, 68, :_reduce_46,
  1, 68, :_reduce_none,
  4, 92, :_reduce_48,
  3, 93, :_reduce_49,
  1, 93, :_reduce_50,
  2, 94, :_reduce_51,
  1, 75, :_reduce_52,
  1, 75, :_reduce_53,
  3, 80, :_reduce_54,
  3, 80, :_reduce_55,
  3, 80, :_reduce_56,
  3, 80, :_reduce_57,
  3, 80, :_reduce_58,
  3, 80, :_reduce_59,
  3, 80, :_reduce_60,
  1, 80, :_reduce_61,
  3, 95, :_reduce_62,
  3, 95, :_reduce_63,
  3, 95, :_reduce_64,
  3, 95, :_reduce_65,
  3, 95, :_reduce_66,
  3, 95, :_reduce_67,
  3, 95, :_reduce_68,
  3, 95, :_reduce_69,
  1, 96, :_reduce_70,
  1, 96, :_reduce_71,
  1, 96, :_reduce_72,
  4, 89, :_reduce_73,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_none,
  1, 85, :_reduce_92,
  0, 70, :_reduce_93,
  1, 70, :_reduce_94,
  1, 73, :_reduce_95,
  2, 73, :_reduce_96,
  1, 97, :_reduce_97,
  1, 97, :_reduce_none,
  1, 83, :_reduce_99 ]

racc_reduce_n = 100

racc_shift_n = 161

racc_token_table = {
  false => 0,
  :error => 1,
  :kDEF => 2,
  :kEND => 3,
  :kRETURN => 4,
  :kPRINT => 5,
  :kIF => 6,
  :kELSIF => 7,
  :kELSE => 8,
  :kTHEN => 9,
  :kSTATIC_ARRAY => 10,
  :kFOR => 11,
  :kWHILE => 12,
  :kDOT_EACH => 13,
  :kDO => 14,
  :kDTYPE_UINT => 15,
  :kDTYPE_LINT => 16,
  :kDTYPE_LLINT => 17,
  :kDTYPE_CHAR => 18,
  :kDTYPE_I8 => 19,
  :kDTYPE_I16 => 20,
  :kDTYPE_I32 => 21,
  :kDTYPE_I64 => 22,
  :kDTYPE_UI8 => 23,
  :kDTYPE_UI16 => 24,
  :kDTYPE_UI32 => 25,
  :kDTYPE_UI64 => 26,
  :kDTYPE_INT => 27,
  :kDTYPE_F32 => 28,
  :kDTYPE_F64 => 29,
  :kDTYPE_LF64 => 30,
  :kDTYPE_ROBJ => 31,
  :kDTYPE_ULINT => 32,
  :kDTYPE_ULLINT => 33,
  :tLPAREN => 34,
  :tRPAREN => 35,
  :tLSQUARE => 36,
  :tRSQUARE => 37,
  :tIDENTIFIER => 38,
  :tNL => 39,
  :tCOMMA => 40,
  :tSQUOTE => 41,
  :tSCOLON => 42,
  :EOF => 43,
  :tPLUS => 44,
  :tMINUS => 45,
  :tMULTIPLY => 46,
  :tDIVIDE => 47,
  :tEXPO => 48,
  :tMODULUS => 49,
  :tASSIGN => 50,
  :tEQ => 51,
  :tLT => 52,
  :tLTEQ => 53,
  :tGT => 54,
  :tGTEQ => 55,
  :tCMP => 56,
  :tANDOP => 57,
  :tOROP => 58,
  :tINTEGER => 59,
  :tFLOAT => 60,
  :tSINGLE_CHAR => 61,
  :tNEQ => 62 }

racc_nt_base = 63

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kDEF",
  "kEND",
  "kRETURN",
  "kPRINT",
  "kIF",
  "kELSIF",
  "kELSE",
  "kTHEN",
  "kSTATIC_ARRAY",
  "kFOR",
  "kWHILE",
  "kDOT_EACH",
  "kDO",
  "kDTYPE_UINT",
  "kDTYPE_LINT",
  "kDTYPE_LLINT",
  "kDTYPE_CHAR",
  "kDTYPE_I8",
  "kDTYPE_I16",
  "kDTYPE_I32",
  "kDTYPE_I64",
  "kDTYPE_UI8",
  "kDTYPE_UI16",
  "kDTYPE_UI32",
  "kDTYPE_UI64",
  "kDTYPE_INT",
  "kDTYPE_F32",
  "kDTYPE_F64",
  "kDTYPE_LF64",
  "kDTYPE_ROBJ",
  "kDTYPE_ULINT",
  "kDTYPE_ULLINT",
  "tLPAREN",
  "tRPAREN",
  "tLSQUARE",
  "tRSQUARE",
  "tIDENTIFIER",
  "tNL",
  "tCOMMA",
  "tSQUOTE",
  "tSCOLON",
  "EOF",
  "tPLUS",
  "tMINUS",
  "tMULTIPLY",
  "tDIVIDE",
  "tEXPO",
  "tMODULUS",
  "tASSIGN",
  "tEQ",
  "tLT",
  "tLTEQ",
  "tGT",
  "tGTEQ",
  "tCMP",
  "tANDOP",
  "tOROP",
  "tINTEGER",
  "tFLOAT",
  "tSINGLE_CHAR",
  "tNEQ",
  "$start",
  "program",
  "methods",
  "ruby_method",
  "f_name",
  "f_opt_arglist",
  "compstmt",
  "opt_terms",
  "stmts",
  "stmt",
  "terms",
  "var_decl_or_init",
  "expr",
  "normal_init",
  "then",
  "if_tail",
  "for_expr",
  "expr_value",
  "lt_or_lteq",
  "gt_or_gteq",
  "eol",
  "opt_else",
  "dtype",
  "decl_or_init",
  "var_init",
  "normal_decl",
  "array_ref",
  "array_list",
  "literal",
  "f_arglist",
  "f_args",
  "f_normal_arg",
  "expr_cmp",
  "atomic_value",
  "term" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_1(val, _values, result)
     result = Node.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_2(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_4(val, _values, result)
            result = RubyMethodDef.new(val[1], val[2], val[3])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_6(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_7(val, _values, result)
     result = [*val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_8(val, _values, result)
     result = [*val[0], *val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_9(val, _values, result)
            variables = []
        dtype = val[0][:dtype]
        val[0][:decl_or_init].each do |di|
          if di[:name].is_a? Expression::ArrayRef
            var = Statement::CArrayDecl.new(dtype, di[:name], di[:value])
          else
            var = Statement::VarDecl.new(dtype, di[:name], di[:value])
          end
          variables << var
        end

        result = variables
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_10(val, _values, result)
     result = Statement::Return.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_11(val, _values, result)
     result = Statement::Print.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_12(val, _values, result)
          match = val[0]
      result = Statement::Assign.new match[:name], match[:value]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_13(val, _values, result)
          result = Statement::IfBlock.new val[1], [*val[3]], [*val[4]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_14(val, _values, result)
     result = Statement::IfBlock.new val[2], [*val[0]], [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_15(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_16(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_17(val, _values, result)
    
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_24(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_25(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_26(val, _values, result)
          result = Statement::IfBlock::Elsif.new val[1], [*val[3]], [*val[4]]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_27(val, _values, result)
     result = Statement::IfBlock::Else.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_28(val, _values, result)
            result = {
          dtype: val[0],
          decl_or_init: val[1]
        }
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_29(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_30(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_31(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_32(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_33(val, _values, result)
     result = { name: val[0] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_34(val, _values, result)
     result = { name: val[0] } 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_36(val, _values, result)
          result = { name: val[0], value: val[3] }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_37(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_38(val, _values, result)
     result = [*val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_39(val, _values, result)
     result = [*val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_40(val, _values, result)
     result = { name: val[0], value: val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_41(val, _values, result)
     result = { name: val[0], value: val[2] } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_42(val, _values, result)
     result = Expression::Literal::Int.new val[0]    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_43(val, _values, result)
     result = Expression::Literal::Double.new val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 146)
  def _reduce_44(val, _values, result)
     result = Expression::Literal::Char.new val[0]   
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 149)
  def _reduce_45(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_46(val, _values, result)
     result = [] 
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_48(val, _values, result)
     result = ArgumentList.new val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 161)
  def _reduce_49(val, _values, result)
            result = [*val[0], val[2]]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_50(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_51(val, _values, result)
     result = CBaseType.new val[0], val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 169)
  def _reduce_52(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_53(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_54(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_55(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_56(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 176)
  def _reduce_57(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_58(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_59(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_60(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_61(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_62(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_63(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_64(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_65(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_66(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_67(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 189)
  def _reduce_68(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 190)
  def _reduce_69(val, _values, result)
     result = binary_op val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 193)
  def _reduce_70(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_71(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_72(val, _values, result)
     result = Expression::Name.new val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_73(val, _values, result)
            result = Expression::ArrayRef.new val[0], val[2]
      
    result
  end
.,.,

# reduce 74 omitted

# reduce 75 omitted

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.racc', 209)
  def _reduce_92(val, _values, result)
            result = val[0]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 213)
  def _reduce_93(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_94(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_95(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_96(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_97(val, _values, result)
    
    result
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_99(val, _values, result)
    result = val[0]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Rubex
